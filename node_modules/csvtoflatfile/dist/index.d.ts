import type { ParseCsv } from './types/ParseCsv.js';
import type { FlatfileWorkbook, FormattedRecordData } from './types/Flatfile.js';
export declare const convertCsvToWorkbook: ({ actions, columnHeaders, csv, fieldKeys, workbookEnvironmentId, workbookSpaceId, fieldTypes, sheetAccess, sheetName, slugName, workbookName, hasColumnHeaders, options }: ParseCsv) => {
    workbook: FlatfileWorkbook;
    recordData: FormattedRecordData[][];
};
export declare const createFlatfile: ({ workbook, recordData, flatfileApiKey, }: {
    workbook: FlatfileWorkbook;
    recordData: FormattedRecordData[][];
    flatfileApiKey: string;
}) => Promise<{
    workbookResponse: import("./types/Flatfile.js").WorkbookResponse;
    recordsResponse: import("./types/Flatfile.js").InsertRecordResponse;
}>;
declare const _default: {
    convertCsvToWorkbook: ({ actions, columnHeaders, csv, fieldKeys, workbookEnvironmentId, workbookSpaceId, fieldTypes, sheetAccess, sheetName, slugName, workbookName, hasColumnHeaders, options }: ParseCsv) => {
        workbook: FlatfileWorkbook;
        recordData: FormattedRecordData[][];
    };
    createFlatfile: ({ workbook, recordData, flatfileApiKey, }: {
        workbook: FlatfileWorkbook;
        recordData: FormattedRecordData[][];
        flatfileApiKey: string;
    }) => Promise<{
        workbookResponse: import("./types/Flatfile.js").WorkbookResponse;
        recordsResponse: import("./types/Flatfile.js").InsertRecordResponse;
    }>;
};
export default _default;
